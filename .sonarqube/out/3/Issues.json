{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.12.0.0",
        "fileVersion": "4.12.0-3.24570.6 (913fb4ec)",
        "semanticVersion": "4.12.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_consumer' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the field as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/BaseKafkaConsumer.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 15,
                  "endLine": 29,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/BaseKafkaConsumer.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 39,
                  "endLine": 20,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_thread' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the field as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/BaseKafkaConsumer.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 15,
                  "endLine": 29,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/BaseKafkaConsumer.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 20,
                  "endLine": 21,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_consumeResult' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the field as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/BaseKafkaConsumer.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 15,
                  "endLine": 29,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/BaseKafkaConsumer.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 43,
                  "endLine": 23,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'EcoPools' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Messages/PaymentModelTwoThreeMessage.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 39,
                  "endLine": 7,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Messages/PaymentModelTwoThreeMessage.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 39,
                  "endLine": 7,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'ModelConfiguration' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Messages/PaymentModelTwoThreeMessage.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 31,
                  "endLine": 8,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Messages/PaymentModelTwoThreeMessage.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 31,
                  "endLine": 8,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Gradings' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Messages/ModelFourFiveSixMessage.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 36,
                  "endLine": 8,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Messages/ModelFourFiveSixMessage.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 36,
                  "endLine": 8,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'UserGradings' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Messages/ModelFourFiveSixMessage.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 44,
                  "endLine": 9,
                  "endColumn": 56
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Messages/ModelFourFiveSixMessage.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 44,
                  "endLine": 9,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Configuration' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Messages/Model3Message.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 34,
                  "endLine": 13,
                  "endColumn": 47
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Messages/Model3Message.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 34,
                  "endLine": 13,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Configuration' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Messages/Model2Message.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 43,
                  "endLine": 14,
                  "endColumn": 56
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Messages/Model2Message.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 43,
                  "endLine": 14,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Configuration' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Messages/Model1BMessage.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 43,
                  "endLine": 14,
                  "endColumn": 56
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Messages/Model1BMessage.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 43,
                  "endLine": 14,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Configuration' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Messages/Model1AMessage.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 43,
                  "endLine": 14,
                  "endColumn": 56
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Messages/Model1AMessage.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 43,
                  "endLine": 14,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'source' in 'string CommonExtensions.ToJsonString(object source)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Producer/KafkaProducer.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 50,
                  "endLine": 29,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'source' in 'string CommonExtensions.ToJsonString(object source)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Producer/KafkaProducer.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 54,
                  "endLine": 51,
                  "endColumn": 60
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'source' in 'string CommonExtensions.ToJsonString(object source)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel1AConsumer.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 93,
                  "endLine": 80,
                  "endColumn": 102
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'source' in 'string CommonExtensions.ToJsonString(object source)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel1AConsumer.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 93,
                  "endLine": 136,
                  "endColumn": 102
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0162",
          "level": "warning",
          "message": "Unreachable code detected",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 453,
                  "startColumn": 9,
                  "endLine": 453,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0162",
          "level": "warning",
          "message": "Unreachable code detected",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 479,
                  "startColumn": 9,
                  "endLine": 479,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0162",
          "level": "warning",
          "message": "Unreachable code detected",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 505,
                  "startColumn": 9,
                  "endLine": 505,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0162",
          "level": "warning",
          "message": "Unreachable code detected",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 531,
                  "startColumn": 9,
                  "endLine": 531,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0162",
          "level": "warning",
          "message": "Unreachable code detected",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 557,
                  "startColumn": 9,
                  "endLine": 557,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 's' in 'byte[] Convert.FromBase64String(string s)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 291,
                  "startColumn": 59,
                  "endLine": 291,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field '_brandService' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the field as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletModel1AService.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 12,
                  "endLine": 21,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletModel1AService.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 52,
                  "endLine": 20,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/EcosystemPdfService.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 54,
                  "endLine": 146,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 706,
                  "startColumn": 86,
                  "endLine": 706,
                  "endColumn": 87
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'source' in 'string CommonExtensions.ToJsonString(object source)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel2Consumer.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 103,
                  "endLine": 80,
                  "endColumn": 112
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'source' in 'string CommonExtensions.ToJsonString(object source)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel3Consumer.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 94,
                  "endLine": 67,
                  "endColumn": 103
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'source' in 'string CommonExtensions.ToJsonString(object source)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel2Consumer.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 92,
                  "endLine": 135,
                  "endColumn": 101
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'source' in 'string CommonExtensions.ToJsonString(object source)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel1BConsumer.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 93,
                  "endLine": 80,
                  "endColumn": 102
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possible null reference argument for parameter 'source' in 'string CommonExtensions.ToJsonString(object source)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel1BConsumer.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 93,
                  "endLine": 135,
                  "endColumn": 102
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/HouseCoinPdfService.cs",
                "region": {
                  "startLine": 157,
                  "startColumn": 54,
                  "endLine": 157,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0162",
          "level": "warning",
          "message": "Unreachable code detected",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 467,
                  "startColumn": 9,
                  "endLine": 467,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS0162",
          "level": "warning",
          "message": "Unreachable code detected",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 495,
                  "startColumn": 9,
                  "endLine": 495,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 2
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ExitoJuntosPdfService.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 54,
                  "endLine": 114,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/RecyCoinPdfService.cs",
                "region": {
                  "startLine": 156,
                  "startColumn": 54,
                  "endLine": 156,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS0649",
          "level": "warning",
          "message": "Field 'WalletModel1AService._brandService' is never assigned to, and will always have its default value null",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletModel1AService.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 52,
                  "endLine": 20,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 4
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 207,
                  "startColumn": 13,
                  "endLine": 207,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the field '_thread' and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/BaseKafkaConsumer.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 20,
                  "endLine": 21,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the field '_consumeResult' and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/BaseKafkaConsumer.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 43,
                  "endLine": 23,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 565,
                  "startColumn": 13,
                  "endLine": 565,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 13,
                  "endLine": 225,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_bonusRepository' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 47,
                  "endLine": 28,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private method 'AddUsersLeaderBoard5'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 361,
                  "startColumn": 5,
                  "endLine": 390,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private method 'CreateCredit1APayment'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 466,
                  "startColumn": 5,
                  "endLine": 490,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private method 'CreateCredit1BPayment'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 518,
                  "startColumn": 5,
                  "endLine": 542,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_bonusRepository' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 39,
                  "endLine": 27,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/IServices/IWalletService.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 5,
                  "endLine": 25,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4487",
          "level": "warning",
          "message": "Remove this unread private field '_bonusRepository' or refactor the code to use its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 39,
                  "endLine": 26,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3459",
          "level": "warning",
          "message": "Remove unassigned field '_brandService', or set its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletModel1AService.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 52,
                  "endLine": 20,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1643",
          "level": "warning",
          "message": "Use a StringBuilder instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/ConPaymentsApi/ConPaymentsApi.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 21,
                  "endLine": 38,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1643",
          "level": "warning",
          "message": "Use a StringBuilder instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/ConPaymentsApi/ConPaymentsApi.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 17,
                  "endLine": 41,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/ConPaymentsApi/ConPaymentsApi.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 60,
                  "endLine": 58,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Constructor has 11 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 34,
                  "endLine": 37,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Middlewares/TokenValidationMiddleware.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 35,
                  "endLine": 51,
                  "endColumn": 106
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Middlewares/TokenValidationMiddleware.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 35,
                  "endLine": 68,
                  "endColumn": 106
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Middlewares/TokenValidationMiddleware.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 31,
                  "endLine": 75,
                  "endColumn": 96
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "ASP0015",
          "level": "note",
          "message": "The header 'Authorization' can be accessed using the Authorization property",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Middlewares/TokenValidationMiddleware.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 21,
                  "endLine": 33,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "HeaderName": "Authorization",
              "ResolvedPropertyName": "Authorization"
            }
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Constructor has 14 new parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletService.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 25,
                  "endLine": 55,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetSenderName' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/BaseEmailService.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 20,
                  "endLine": 22,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetBrandFolderName' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/BaseEmailService.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 20,
                  "endLine": 34,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Constructor has 8 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategyModel2.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 40,
                  "endLine": 28,
                  "endColumn": 107
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel1AConsumer.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 29,
                  "endLine": 31,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 29,
                  "endLine": 81,
                  "endColumn": 50
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 9,
                  "endLine": 94,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 9,
                  "endLine": 97,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 9,
                  "endLine": 102,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 9,
                  "endLine": 114,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 9,
                  "endLine": 117,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 9,
                  "endLine": 122,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 129,
                  "startColumn": 13,
                  "endLine": 129,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 161,
                  "startColumn": 9,
                  "endLine": 161,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 164,
                  "startColumn": 9,
                  "endLine": 164,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 167,
                  "startColumn": 9,
                  "endLine": 167,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 184,
                  "startColumn": 49,
                  "endLine": 184,
                  "endColumn": 55
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 201,
                  "startColumn": 9,
                  "endLine": 201,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 204,
                  "startColumn": 9,
                  "endLine": 204,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 222,
                  "startColumn": 9,
                  "endLine": 222,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 238,
                  "startColumn": 9,
                  "endLine": 238,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 242,
                  "startColumn": 9,
                  "endLine": 242,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 246,
                  "startColumn": 9,
                  "endLine": 246,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 258,
                  "startColumn": 9,
                  "endLine": 258,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/BalancePaymentStrategy.cs",
                "region": {
                  "startLine": 263,
                  "startColumn": 9,
                  "endLine": 263,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "15": "+1",
              "16": "+1",
              "17": "+1",
              "18": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/BaseKafkaConsumer.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 39,
                  "endLine": 125,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/BaseKafkaConsumer.cs",
                "region": {
                  "startLine": 130,
                  "startColumn": 39,
                  "endLine": 130,
                  "endColumn": 121
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/BaseKafkaConsumer.cs",
                "region": {
                  "startLine": 133,
                  "startColumn": 21,
                  "endLine": 133,
                  "endColumn": 172
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Constructor has 11 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 30,
                  "startColumn": 34,
                  "endLine": 36,
                  "endColumn": 96
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel1AConsumer.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 31,
                  "endLine": 58,
                  "endColumn": 108
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this unused method parameter 'ex'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/BaseKafkaConsumer.cs",
                "region": {
                  "startLine": 177,
                  "startColumn": 47,
                  "endLine": 177,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "True"
            }
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel1AConsumer.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 35,
                  "endLine": 80,
                  "endColumn": 119
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetPdfContentForTradingAcademy' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/WireTransferStrategy.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 52,
                  "endLine": 34,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Constructor has 12 new parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 26,
                  "endLine": 51,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Constructor has 10 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/PagaditoPaymentStrategy.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 35,
                  "endLine": 34,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Constructor has 10 new parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 41,
                  "endLine": 37,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'request' to 'name' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletService.cs",
                "region": {
                  "startLine": 285,
                  "startColumn": 83,
                  "endLine": 285,
                  "endColumn": 90
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Constructor has 13 new parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 29,
                  "endLine": 58,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'nameTag' to 'pbntag' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 78,
                  "startColumn": 79,
                  "endLine": 78,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 19,
                  "endLine": 117,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 19,
                  "endLine": 97,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 32,
                  "endLine": 80,
                  "endColumn": 105
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 32,
                  "endLine": 88,
                  "endColumn": 118
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 19,
                  "endLine": 138,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 154,
                  "startColumn": 19,
                  "endLine": 154,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 32,
                  "endLine": 144,
                  "endColumn": 114
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 13,
                  "endLine": 150,
                  "endColumn": 108
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 37,
                  "endLine": 135,
                  "endColumn": 51
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 19,
                  "endLine": 139,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel1AConsumer.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 35,
                  "endLine": 136,
                  "endColumn": 119
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 23 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 29,
                  "endLine": 51,
                  "endColumn": 43
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 9,
                  "endLine": 66,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 69,
                  "startColumn": 9,
                  "endLine": 69,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 74,
                  "startColumn": 9,
                  "endLine": 74,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 9,
                  "endLine": 86,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 9,
                  "endLine": 89,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 9,
                  "endLine": 94,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 13,
                  "endLine": 101,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 133,
                  "startColumn": 9,
                  "endLine": 133,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 136,
                  "startColumn": 9,
                  "endLine": 136,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 9,
                  "endLine": 139,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 148,
                  "startColumn": 45,
                  "endLine": 148,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 50,
                  "endLine": 173,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 191,
                  "startColumn": 9,
                  "endLine": 191,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 208,
                  "startColumn": 50,
                  "endLine": 208,
                  "endColumn": 51
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 219,
                  "startColumn": 9,
                  "endLine": 219,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 222,
                  "startColumn": 9,
                  "endLine": 222,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 241,
                  "startColumn": 9,
                  "endLine": 241,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 257,
                  "startColumn": 9,
                  "endLine": 257,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 262,
                  "startColumn": 9,
                  "endLine": 262,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 267,
                  "startColumn": 9,
                  "endLine": 267,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 280,
                  "startColumn": 9,
                  "endLine": 280,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/ToThirdPartiesPaymentStrategy.cs",
                "region": {
                  "startLine": 285,
                  "startColumn": 9,
                  "endLine": 285,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+1",
              "14": "+1",
              "15": "+1",
              "16": "+1",
              "17": "+1",
              "18": "+1",
              "19": "+1",
              "2": "+1",
              "20": "+1",
              "21": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 33,
                  "endLine": 137,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 214,
                  "startColumn": 29,
                  "endLine": 214,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 9,
                  "endLine": 226,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 229,
                  "startColumn": 9,
                  "endLine": 229,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 234,
                  "startColumn": 9,
                  "endLine": 234,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 237,
                  "startColumn": 9,
                  "endLine": 237,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 241,
                  "startColumn": 9,
                  "endLine": 241,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 248,
                  "startColumn": 76,
                  "endLine": 248,
                  "endColumn": 78
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 249,
                  "startColumn": 13,
                  "endLine": 249,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 281,
                  "startColumn": 9,
                  "endLine": 281,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 284,
                  "startColumn": 9,
                  "endLine": 284,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 313,
                  "startColumn": 9,
                  "endLine": 313,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 322,
                  "startColumn": 9,
                  "endLine": 322,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 322,
                  "startColumn": 24,
                  "endLine": 322,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 325,
                  "startColumn": 13,
                  "endLine": 325,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 333,
                  "startColumn": 9,
                  "endLine": 333,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+2 (incl 1 for nesting)",
              "13": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletService.cs",
                "region": {
                  "startLine": 555,
                  "startColumn": 75,
                  "endLine": 555,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletService.cs",
                "region": {
                  "startLine": 555,
                  "startColumn": 44,
                  "endLine": 555,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/PagaditoPaymentStrategy.cs",
                "region": {
                  "startLine": 210,
                  "startColumn": 29,
                  "endLine": 210,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/PagaditoPaymentStrategy.cs",
                "region": {
                  "startLine": 222,
                  "startColumn": 9,
                  "endLine": 222,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/PagaditoPaymentStrategy.cs",
                "region": {
                  "startLine": 225,
                  "startColumn": 9,
                  "endLine": 225,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/PagaditoPaymentStrategy.cs",
                "region": {
                  "startLine": 230,
                  "startColumn": 9,
                  "endLine": 230,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/PagaditoPaymentStrategy.cs",
                "region": {
                  "startLine": 233,
                  "startColumn": 9,
                  "endLine": 233,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/PagaditoPaymentStrategy.cs",
                "region": {
                  "startLine": 237,
                  "startColumn": 9,
                  "endLine": 237,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/PagaditoPaymentStrategy.cs",
                "region": {
                  "startLine": 244,
                  "startColumn": 81,
                  "endLine": 244,
                  "endColumn": 83
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/PagaditoPaymentStrategy.cs",
                "region": {
                  "startLine": 245,
                  "startColumn": 13,
                  "endLine": 245,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/PagaditoPaymentStrategy.cs",
                "region": {
                  "startLine": 276,
                  "startColumn": 9,
                  "endLine": 276,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/PagaditoPaymentStrategy.cs",
                "region": {
                  "startLine": 279,
                  "startColumn": 9,
                  "endLine": 279,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/PagaditoPaymentStrategy.cs",
                "region": {
                  "startLine": 296,
                  "startColumn": 54,
                  "endLine": 296,
                  "endColumn": 55
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/PagaditoPaymentStrategy.cs",
                "region": {
                  "startLine": 307,
                  "startColumn": 9,
                  "endLine": 307,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/PagaditoPaymentStrategy.cs",
                "region": {
                  "startLine": 319,
                  "startColumn": 9,
                  "endLine": 319,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/PagaditoPaymentStrategy.cs",
                "region": {
                  "startLine": 319,
                  "startColumn": 24,
                  "endLine": 319,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/PagaditoPaymentStrategy.cs",
                "region": {
                  "startLine": 322,
                  "startColumn": 13,
                  "endLine": 322,
                  "endColumn": 20
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/PagaditoPaymentStrategy.cs",
                "region": {
                  "startLine": 328,
                  "startColumn": 9,
                  "endLine": 328,
                  "endColumn": 13
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+1",
              "12": "+1",
              "13": "+2 (incl 1 for nesting)",
              "14": "+1",
              "2": "+1",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+1",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'idTransaction' to 'txid' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 77,
                  "endLine": 226,
                  "endColumn": 90
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 174,
                  "startColumn": 21,
                  "endLine": 174,
                  "endColumn": 68
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 176,
                  "startColumn": 21,
                  "endLine": 176,
                  "endColumn": 56
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 177,
                  "startColumn": 21,
                  "endLine": 177,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 13,
                  "endLine": 178,
                  "endColumn": 116
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 214,
                  "startColumn": 32,
                  "endLine": 214,
                  "endColumn": 117
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Length' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletService.cs",
                "region": {
                  "startLine": 581,
                  "startColumn": 47,
                  "endLine": 581,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Length"
            }
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletService.cs",
                "region": {
                  "startLine": 586,
                  "startColumn": 38,
                  "endLine": 586,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 243,
                  "startColumn": 19,
                  "endLine": 243,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'affiliateBonusWinner'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPaymentsPaymentStrategy.cs",
                "region": {
                  "startLine": 328,
                  "startColumn": 13,
                  "endLine": 328,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'affiliateBonusWinner'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 351,
                  "startColumn": 13,
                  "endLine": 351,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'createdWallet'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletService.cs",
                "region": {
                  "startLine": 696,
                  "startColumn": 17,
                  "endLine": 696,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'createdCredit'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletService.cs",
                "region": {
                  "startLine": 697,
                  "startColumn": 17,
                  "endLine": 697,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 249,
                  "startColumn": 13,
                  "endLine": 249,
                  "endColumn": 131
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 259,
                  "startColumn": 13,
                  "endLine": 259,
                  "endColumn": 109
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Constructor has 12 new parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/InvoiceService.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 26,
                  "endLine": 44,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 238,
                  "startColumn": 21,
                  "endLine": 238,
                  "endColumn": 68
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 240,
                  "startColumn": 21,
                  "endLine": 240,
                  "endColumn": 56
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 241,
                  "startColumn": 21,
                  "endLine": 241,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 291,
                  "startColumn": 13,
                  "endLine": 291,
                  "endColumn": 120
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'CreateCreditTransactionRequest' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletService.cs",
                "region": {
                  "startLine": 534,
                  "startColumn": 38,
                  "endLine": 534,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 339,
                  "startColumn": 37,
                  "endLine": 339,
                  "endColumn": 51
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 343,
                  "startColumn": 19,
                  "endLine": 343,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, Exception?, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/InvoiceService.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 37,
                  "endLine": 94,
                  "endColumn": 99
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 300,
                  "startColumn": 13,
                  "endLine": 300,
                  "endColumn": 118
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 306,
                  "startColumn": 32,
                  "endLine": 306,
                  "endColumn": 119
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 341,
                  "startColumn": 33,
                  "endLine": 341,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 418,
                  "startColumn": 32,
                  "endLine": 418,
                  "endColumn": 161
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogDebug(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 428,
                  "startColumn": 13,
                  "endLine": 428,
                  "endColumn": 110
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 447,
                  "startColumn": 17,
                  "endLine": 447,
                  "endColumn": 175
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 454,
                  "startColumn": 17,
                  "endLine": 454,
                  "endColumn": 190
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 459,
                  "startColumn": 13,
                  "endLine": 459,
                  "endColumn": 174
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 464,
                  "startColumn": 17,
                  "endLine": 464,
                  "endColumn": 195
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 475,
                  "startColumn": 21,
                  "endLine": 475,
                  "endColumn": 154
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 482,
                  "startColumn": 21,
                  "endLine": 482,
                  "endColumn": 147
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 492,
                  "startColumn": 21,
                  "endLine": 492,
                  "endColumn": 177
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 495,
                  "startColumn": 21,
                  "endLine": 495,
                  "endColumn": 146
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 500,
                  "startColumn": 21,
                  "endLine": 500,
                  "endColumn": 134
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 506,
                  "startColumn": 13,
                  "endLine": 506,
                  "endColumn": 152
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 380,
                  "startColumn": 58,
                  "endLine": 380,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": "ToLower",
              "RightOffendingMethod": null
            }
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'requests' to 'request' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 511,
                  "startColumn": 68,
                  "endLine": 511,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetPdfContentForTradingAcademy' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPaymentsPaymentStrategy.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 52,
                  "endLine": 37,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 514,
                  "startColumn": 13,
                  "endLine": 514,
                  "endColumn": 102
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 528,
                  "startColumn": 17,
                  "endLine": 528,
                  "endColumn": 110
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 537,
                  "startColumn": 25,
                  "endLine": 537,
                  "endColumn": 117
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 544,
                  "startColumn": 25,
                  "endLine": 544,
                  "endColumn": 113
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 551,
                  "startColumn": 21,
                  "endLine": 551,
                  "endColumn": 128
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 559,
                  "startColumn": 17,
                  "endLine": 559,
                  "endColumn": 134
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/InvoiceService.cs",
                "region": {
                  "startLine": 130,
                  "startColumn": 32,
                  "endLine": 130,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/InvoiceService.cs",
                "region": {
                  "startLine": 141,
                  "startColumn": 32,
                  "endLine": 141,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/InvoiceService.cs",
                "region": {
                  "startLine": 151,
                  "startColumn": 32,
                  "endLine": 151,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 301,
                  "startColumn": 21,
                  "endLine": 301,
                  "endColumn": 67
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 303,
                  "startColumn": 21,
                  "endLine": 303,
                  "endColumn": 55
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 304,
                  "startColumn": 21,
                  "endLine": 304,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Constructor has 9 new parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 27,
                  "endLine": 45,
                  "endColumn": 119
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Constructor has 9 new parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletRequestService.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 32,
                  "endLine": 42,
                  "endColumn": 6
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetPdfContentForTradingAcademy' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/PagaditoPaymentStrategy.cs",
                "region": {
                  "startLine": 47,
                  "startColumn": 54,
                  "endLine": 47,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'pOption' to 'option' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletRequestService.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 60,
                  "endLine": 143,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S4457",
          "level": "warning",
          "message": "Split this method into two, one handling parameters check and the other handling the asynchronous code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 37,
                  "endLine": 101,
                  "endColumn": 51
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 105,
                  "startColumn": 19,
                  "endLine": 105,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'ids' to 'id' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletRequestService.cs",
                "region": {
                  "startLine": 177,
                  "startColumn": 60,
                  "endLine": 177,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 33,
                  "endLine": 103,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 570,
                  "startColumn": 13,
                  "endLine": 570,
                  "endColumn": 114
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 579,
                  "startColumn": 13,
                  "endLine": 579,
                  "endColumn": 116
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 587,
                  "startColumn": 17,
                  "endLine": 587,
                  "endColumn": 136
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 593,
                  "startColumn": 17,
                  "endLine": 593,
                  "endColumn": 113
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 604,
                  "startColumn": 17,
                  "endLine": 604,
                  "endColumn": 125
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 629,
                  "startColumn": 32,
                  "endLine": 629,
                  "endColumn": 127
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 653,
                  "startColumn": 40,
                  "endLine": 653,
                  "endColumn": 145
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 692,
                  "startColumn": 25,
                  "endLine": 692,
                  "endColumn": 160
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 696,
                  "startColumn": 38,
                  "endLine": 696,
                  "endColumn": 165
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 703,
                  "startColumn": 36,
                  "endLine": 703,
                  "endColumn": 192
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 712,
                  "startColumn": 28,
                  "endLine": 712,
                  "endColumn": 156
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 9 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 393,
                  "startColumn": 43,
                  "endLine": 402,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'walletRepository', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 441,
                  "startColumn": 9,
                  "endLine": 441,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'userId', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 442,
                  "startColumn": 9,
                  "endLine": 442,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'userName', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 443,
                  "startColumn": 9,
                  "endLine": 443,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'concept', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 445,
                  "startColumn": 9,
                  "endLine": 445,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'conceptType', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 446,
                  "startColumn": 9,
                  "endLine": 446,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'walletRepository', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 467,
                  "startColumn": 9,
                  "endLine": 467,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'userId', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 468,
                  "startColumn": 9,
                  "endLine": 468,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'userName', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 469,
                  "startColumn": 9,
                  "endLine": 469,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'concept', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 471,
                  "startColumn": 9,
                  "endLine": 471,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'conceptType', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 472,
                  "startColumn": 9,
                  "endLine": 472,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'walletRepository', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 493,
                  "startColumn": 9,
                  "endLine": 493,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'userId', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 494,
                  "startColumn": 9,
                  "endLine": 494,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'userName', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 495,
                  "startColumn": 9,
                  "endLine": 495,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'concept', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 497,
                  "startColumn": 9,
                  "endLine": 497,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'conceptType', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 498,
                  "startColumn": 9,
                  "endLine": 498,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 513,
                  "startColumn": 34,
                  "endLine": 513,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 500,
                  "startColumn": 17,
                  "endLine": 500,
                  "endColumn": 119
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 508,
                  "startColumn": 17,
                  "endLine": 508,
                  "endColumn": 140
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 516,
                  "startColumn": 17,
                  "endLine": 516,
                  "endColumn": 131
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 521,
                  "startColumn": 13,
                  "endLine": 521,
                  "endColumn": 146
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 535,
                  "startColumn": 17,
                  "endLine": 535,
                  "endColumn": 133
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, Exception?, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 540,
                  "startColumn": 17,
                  "endLine": 540,
                  "endColumn": 128
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PaymentTransactionService.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 14,
                  "endLine": 87,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'walletRepository', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 519,
                  "startColumn": 9,
                  "endLine": 519,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'userId', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 520,
                  "startColumn": 9,
                  "endLine": 520,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'userName', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 521,
                  "startColumn": 9,
                  "endLine": 521,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'concept', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 523,
                  "startColumn": 9,
                  "endLine": 523,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'conceptType', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 524,
                  "startColumn": 9,
                  "endLine": 524,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 365,
                  "startColumn": 21,
                  "endLine": 365,
                  "endColumn": 67
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 367,
                  "startColumn": 21,
                  "endLine": 367,
                  "endColumn": 55
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 368,
                  "startColumn": 21,
                  "endLine": 368,
                  "endColumn": 55
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'walletRepository', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 545,
                  "startColumn": 9,
                  "endLine": 545,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'userId', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 546,
                  "startColumn": 9,
                  "endLine": 546,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'userName', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 547,
                  "startColumn": 9,
                  "endLine": 547,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'concept', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 549,
                  "startColumn": 9,
                  "endLine": 549,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'conceptType', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessPaymentModel1A1B23Consumer.cs",
                "region": {
                  "startLine": 550,
                  "startColumn": 9,
                  "endLine": 550,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetPdfContentForTradingAcademy' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/PaymentStrategies/CoinPayPaymentStrategy.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 52,
                  "endLine": 51,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 723,
                  "startColumn": 13,
                  "endLine": 723,
                  "endColumn": 148
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogDebug(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/CoinPayService.cs",
                "region": {
                  "startLine": 729,
                  "startColumn": 17,
                  "endLine": 729,
                  "endColumn": 118
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletRequestService.cs",
                "region": {
                  "startLine": 292,
                  "startColumn": 75,
                  "endLine": 292,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 13,
                  "endLine": 142,
                  "endColumn": 117
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 32,
                  "endLine": 178,
                  "endColumn": 118
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletRequestService.cs",
                "region": {
                  "startLine": 292,
                  "startColumn": 44,
                  "endLine": 292,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/InvoiceService.cs",
                "region": {
                  "startLine": 259,
                  "startColumn": 49,
                  "endLine": 259,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'usersJsonString'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ProcessGradingService.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 13,
                  "endLine": 66,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 209,
                  "startColumn": 32,
                  "endLine": 209,
                  "endColumn": 108
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 223,
                  "startColumn": 13,
                  "endLine": 223,
                  "endColumn": 112
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/RedisCacheCleanupService.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 40,
                  "endLine": 34,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'BuildWalletRequest' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PaymentTransactionService.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 27,
                  "endLine": 143,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletRequestService.cs",
                "region": {
                  "startLine": 358,
                  "startColumn": 14,
                  "endLine": 358,
                  "endColumn": 27
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "S1125",
          "level": "warning",
          "message": "Remove the unnecessary Boolean literal(s).",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 348,
                  "startColumn": 115,
                  "endLine": 348,
                  "endColumn": 120
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S927",
          "level": "warning",
          "message": "Rename parameter 'purchaseRequest' to 'request' to match the interface declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 311,
                  "startColumn": 69,
                  "endLine": 311,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1905",
          "level": "warning",
          "message": "Remove this unnecessary cast to 'long'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 321,
                  "startColumn": 25,
                  "endLine": 321,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'IsWithdrawalUtcDateAllowed' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/WalletRequestService.cs",
                "region": {
                  "startLine": 396,
                  "startColumn": 18,
                  "endLine": 396,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 258,
                  "startColumn": 32,
                  "endLine": 258,
                  "endColumn": 134
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 266,
                  "startColumn": 32,
                  "endLine": 266,
                  "endColumn": 123
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 271,
                  "startColumn": 32,
                  "endLine": 271,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 276,
                  "startColumn": 32,
                  "endLine": 276,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 287,
                  "startColumn": 36,
                  "endLine": 287,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 298,
                  "startColumn": 36,
                  "endLine": 298,
                  "endColumn": 87
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/PagaditoService.cs",
                "region": {
                  "startLine": 306,
                  "startColumn": 30,
                  "endLine": 306,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.Exception' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 570,
                  "startColumn": 19,
                  "endLine": 570,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 547,
                  "startColumn": 13,
                  "endLine": 547,
                  "endColumn": 104
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 609,
                  "startColumn": 25,
                  "endLine": 609,
                  "endColumn": 125
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 663,
                  "startColumn": 21,
                  "endLine": 663,
                  "endColumn": 136
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel2Consumer.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 29,
                  "endLine": 31,
                  "endColumn": 94
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 687,
                  "startColumn": 40,
                  "endLine": 687,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 695,
                  "startColumn": 40,
                  "endLine": 695,
                  "endColumn": 99
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 702,
                  "startColumn": 40,
                  "endLine": 702,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 710,
                  "startColumn": 40,
                  "endLine": 710,
                  "endColumn": 105
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 722,
                  "startColumn": 39,
                  "endLine": 722,
                  "endColumn": 132
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, Exception?, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 726,
                  "startColumn": 38,
                  "endLine": 726,
                  "endColumn": 101
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel1BConsumer.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 31,
                  "endLine": 58,
                  "endColumn": 108
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 171,
                  "startColumn": 57,
                  "endLine": 171,
                  "endColumn": 82
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 178,
                  "startColumn": 9,
                  "endLine": 178,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 180,
                  "startColumn": 13,
                  "endLine": 180,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 182,
                  "startColumn": 17,
                  "endLine": 182,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 193,
                  "startColumn": 92,
                  "endLine": 193,
                  "endColumn": 93
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 194,
                  "startColumn": 17,
                  "endLine": 194,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 194,
                  "startColumn": 50,
                  "endLine": 194,
                  "endColumn": 52
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 205,
                  "startColumn": 13,
                  "endLine": 205,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 207,
                  "startColumn": 17,
                  "endLine": 207,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+2 (incl 1 for nesting)",
              "2": "+3 (incl 2 for nesting)",
              "3": "+3 (incl 2 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this unused method parameter 'model'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 172,
                  "startColumn": 9,
                  "endLine": 172,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "True"
            }
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel2Consumer.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 35,
                  "endLine": 80,
                  "endColumn": 129
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel2Consumer.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 31,
                  "endLine": 58,
                  "endColumn": 107
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 9 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ProcessGradingService.cs",
                "region": {
                  "startLine": 254,
                  "startColumn": 36,
                  "endLine": 263,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel3Consumer.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 31,
                  "endLine": 58,
                  "endColumn": 109
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel3Consumer.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 35,
                  "endLine": 67,
                  "endColumn": 120
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogInformation(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 745,
                  "startColumn": 13,
                  "endLine": 745,
                  "endColumn": 148
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogDebug(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 751,
                  "startColumn": 17,
                  "endLine": 751,
                  "endColumn": 118
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel3Consumer.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 29,
                  "endLine": 33,
                  "endColumn": 96
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'SetRequestDefaults' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 160,
                  "startColumn": 18,
                  "endLine": 160,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'ConfigureParms' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 172,
                  "startColumn": 40,
                  "endLine": 172,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'BuildWalletRequest' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ConPaymentService.cs",
                "region": {
                  "startLine": 398,
                  "startColumn": 27,
                  "endLine": 398,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogError(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel1BConsumer.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 29,
                  "endLine": 31,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 31 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 31,
                  "endLine": 226,
                  "endColumn": 62
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 241,
                  "startColumn": 9,
                  "endLine": 241,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 246,
                  "startColumn": 9,
                  "endLine": 246,
                  "endColumn": 16
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 257,
                  "startColumn": 13,
                  "endLine": 257,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 263,
                  "startColumn": 13,
                  "endLine": 263,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 263,
                  "startColumn": 43,
                  "endLine": 263,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 278,
                  "startColumn": 17,
                  "endLine": 278,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 281,
                  "startColumn": 17,
                  "endLine": 281,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 294,
                  "startColumn": 17,
                  "endLine": 294,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 308,
                  "startColumn": 13,
                  "endLine": 308,
                  "endColumn": 17
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 308,
                  "startColumn": 37,
                  "endLine": 308,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 310,
                  "startColumn": 69,
                  "endLine": 310,
                  "endColumn": 70
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 323,
                  "startColumn": 17,
                  "endLine": 323,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 326,
                  "startColumn": 17,
                  "endLine": 326,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 339,
                  "startColumn": 17,
                  "endLine": 339,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 352,
                  "startColumn": 13,
                  "endLine": 352,
                  "endColumn": 17
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+3 (incl 2 for nesting)",
              "11": "+3 (incl 2 for nesting)",
              "12": "+3 (incl 2 for nesting)",
              "13": "+3 (incl 2 for nesting)",
              "14": "+1",
              "2": "+2 (incl 1 for nesting)",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+3 (incl 2 for nesting)",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+1",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel2Consumer.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 35,
                  "endLine": 135,
                  "endColumn": 118
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel1BConsumer.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 35,
                  "endLine": 80,
                  "endColumn": 119
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 9 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 226,
                  "startColumn": 62,
                  "endLine": 234,
                  "endColumn": 70
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 9 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ProcessGradingService.cs",
                "region": {
                  "startLine": 195,
                  "startColumn": 35,
                  "endLine": 204,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'hasTwoChildren', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 432,
                  "startColumn": 9,
                  "endLine": 432,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'walletRepository', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 455,
                  "startColumn": 9,
                  "endLine": 455,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'userId', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 456,
                  "startColumn": 9,
                  "endLine": 456,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'userName', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 457,
                  "startColumn": 9,
                  "endLine": 457,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'concept', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 459,
                  "startColumn": 9,
                  "endLine": 459,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'conceptType', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 460,
                  "startColumn": 9,
                  "endLine": 460,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'ValidateDateRange' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/InvoiceService.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 18,
                  "endLine": 111,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'ConfigureHeaders' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/InvoiceService.cs",
                "region": {
                  "startLine": 490,
                  "startColumn": 18,
                  "endLine": 490,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'FormatWorksheet' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/InvoiceService.cs",
                "region": {
                  "startLine": 514,
                  "startColumn": 18,
                  "endLine": 514,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'walletRepository', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 482,
                  "startColumn": 9,
                  "endLine": 482,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'userId', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 483,
                  "startColumn": 9,
                  "endLine": 483,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'userName', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 484,
                  "startColumn": 9,
                  "endLine": 484,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'concept', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 486,
                  "startColumn": 9,
                  "endLine": 486,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S1172",
          "level": "warning",
          "message": "Remove this parameter 'conceptType', whose value is ignored in the method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 487,
                  "startColumn": 9,
                  "endLine": 487,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "IsRemovable": "False"
            }
          }
        },
        {
          "ruleId": "S107",
          "level": "warning",
          "message": "Method has 9 parameters, which is greater than the 7 authorized.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ProcessGradingService.cs",
                "region": {
                  "startLine": 311,
                  "startColumn": 41,
                  "endLine": 320,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2254",
          "level": "note",
          "message": "The logging message template should not vary between calls to 'LoggerExtensions.LogWarning(ILogger, string?, params object?[])'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModel1BConsumer.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 35,
                  "endLine": 135,
                  "endColumn": 119
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1859",
          "level": "note",
          "message": "Change type of parameter 'leaderBoardModel5' from 'System.Collections.Generic.ICollection<WalletService.Models.DTO.LeaderBoardDto.LeaderBoardModel5>' to 'System.Collections.Generic.List<WalletService.Models.DTO.LeaderBoardDto.LeaderBoardModel5>' for improved performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 232,
                  "startColumn": 44,
                  "endLine": 232,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1859",
          "level": "note",
          "message": "Change type of parameter 'leaderBoardModel6' from 'System.Collections.Generic.ICollection<WalletService.Models.DTO.LeaderBoardDto.LeaderBoardModel6>' to 'System.Collections.Generic.List<WalletService.Models.DTO.LeaderBoardDto.LeaderBoardModel6>' for improved performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Kafka/Consumers/ProcessModelsFourFiveSixConsumer.cs",
                "region": {
                  "startLine": 233,
                  "startColumn": 44,
                  "endLine": 233,
                  "endColumn": 61
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1859",
          "level": "note",
          "message": "Change type of parameter 'products' from 'System.Collections.Generic.IReadOnlyCollection<int>' to 'int[]' for improved performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ProcessGradingService.cs",
                "region": {
                  "startLine": 437,
                  "startColumn": 34,
                  "endLine": 437,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1859",
          "level": "note",
          "message": "Change type of parameter 'accounts' from 'System.Collections.Generic.IReadOnlyCollection<int>' to 'int[]' for improved performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/HeroSystem/walletService/WalletService.Core/Services/ProcessGradingService.cs",
                "region": {
                  "startLine": 400,
                  "startColumn": 34,
                  "endLine": 400,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "ASP0015": {
          "id": "ASP0015",
          "shortDescription": "Suggest using IHeaderDictionary properties",
          "defaultLevel": "note",
          "helpUri": "https://aka.ms/aspnet/analyzers",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true
          }
        },
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1854": {
          "id": "CA1854",
          "shortDescription": "Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method",
          "fullDescription": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check. 'ContainsKey' and the indexer both would lookup the key under the hood, so using 'TryGetValue' removes the extra lookup.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1854",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1859": {
          "id": "CA1859",
          "shortDescription": "Use concrete types when possible for improved performance",
          "fullDescription": "Using concrete types avoids virtual or interface call overhead and enables inlining.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1859",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1860": {
          "id": "CA1860",
          "shortDescription": "Avoid using 'Enumerable.Any()' extension method",
          "fullDescription": "Prefer using 'IsEmpty', 'Count' or 'Length' properties whichever available, rather than calling 'Enumerable.Any()'. The intent is clearer and it is more performant than using 'Enumerable.Any()' extension method.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1860",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1862": {
          "id": "CA1862",
          "shortDescription": "Use the 'StringComparison' method overloads to perform case-insensitive string comparisons",
          "fullDescription": "Avoid calling 'ToLower', 'ToUpper', 'ToLowerInvariant' and 'ToUpperInvariant' to perform case-insensitive string comparisons, as in 'string.ToLower() == string.ToLower()', because they lead to an allocation. Instead, use 'string.Equals(string, StringComparison)' to perform case-insensitive comparisons. Switching to using an overload that takes a 'StringComparison' might cause subtle changes in behavior, so it's important to conduct thorough testing after applying the suggestion. Additionally, if a culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1862",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA2254": {
          "id": "CA2254",
          "shortDescription": "Template should be a static expression",
          "fullDescription": "The logging message template should not vary between calls.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2254",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS0162": {
          "id": "CS0162",
          "shortDescription": "Unreachable code detected",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0162)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS0649": {
          "id": "CS0649",
          "shortDescription": "Field is never assigned to, and will always have its default value",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS0649)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8602": {
          "id": "CS8602",
          "shortDescription": "Dereference of a possibly null reference.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8602)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Possible null reference argument.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "Non-nullable field must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring as nullable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S107": {
          "id": "S107",
          "shortDescription": "Methods should not have too many parameters",
          "fullDescription": "A long parameter list can indicate that a new structure should be created to wrap the numerous parameters or that the function is doing too many things.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-107",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1075": {
          "id": "S1075",
          "shortDescription": "URIs should not be hardcoded",
          "fullDescription": "Hardcoding a URI makes it difficult to test a program: path literals are not always portable across operating systems, a given absolute path may not exist on a specific test environment, a specified Internet URL may not be available when executing the tests, production environment filesystems usually differ from the development environment, …​etc. For all those reasons, a URI should never be hardcoded. Instead, it should be replaced by customizable parameter.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1075",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S112": {
          "id": "S112",
          "shortDescription": "General exceptions should never be thrown",
          "fullDescription": "Throwing such general exceptions as Exception, SystemException, ApplicationException, IndexOutOfRangeException, NullReferenceException, OutOfMemoryException and ExecutionEngineException prevents calling methods from handling true, system-generated exceptions differently than application-generated errors.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-112",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1125": {
          "id": "S1125",
          "shortDescription": "Boolean literals should not be redundant",
          "fullDescription": "Redundant Boolean literals should be removed from expressions to improve readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1125",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1144": {
          "id": "S1144",
          "shortDescription": "Unused private types or members should be removed",
          "fullDescription": "private or internal types or private members that are never executed or referenced are dead code: unnecessary, inoperative code that should be removed. Cleaning out dead code decreases the size of the maintained codebase, making it easier to understand the program and preventing bugs from being introduced.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay",
              "Unnecessary"
            ]
          }
        },
        "S1172": {
          "id": "S1172",
          "shortDescription": "Unused method parameters should be removed",
          "fullDescription": "Unused parameters are misleading. Whatever the values passed to such parameters, the behavior will be the same.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1172",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Programmers should not comment out code as it bloats programs and reduces readability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1450": {
          "id": "S1450",
          "shortDescription": "Private fields only used as local variables in methods should become local variables",
          "fullDescription": "When the value of a private field is always assigned to in a class' methods before being read, then it is not being used to store class information. Therefore, it should become a local variable in the relevant methods to prevent any misunderstanding.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1450",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "If a local variable is declared but not used, it is dead code and should be removed. Doing so will improve maintainability because developers will not wonder what the variable is used for.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1643": {
          "id": "S1643",
          "shortDescription": "Strings should not be concatenated using '+' in a loop",
          "fullDescription": "StringBuilder is more efficient than string concatenation, especially when the operator is repeated over and over as in loops.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1643",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1905": {
          "id": "S1905",
          "shortDescription": "Redundant casts should not be used",
          "fullDescription": "Unnecessary casting expressions make the code harder to read and understand.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1905",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3459": {
          "id": "S3459",
          "shortDescription": "Unassigned members should be removed",
          "fullDescription": "Fields and auto-properties that are never assigned to hold the default values for their types. They are either pointless code or, more likely, mistakes.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3459",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4457": {
          "id": "S4457",
          "shortDescription": "Parameter validation in \"async\"/\"await\" methods should be wrapped",
          "fullDescription": "Because of the way async/await methods are rewritten by the compiler, any exceptions thrown during the parameters check will happen only when the task is observed. That could happen far away from the source of the buggy code or never happen for fire-and-forget tasks.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4457",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S4487": {
          "id": "S4487",
          "shortDescription": "Unread \"private\" fields should be removed",
          "fullDescription": "Private fields only used to store values without reading them later is a case of dead store. So changing the value of such field is useless and most probably indicates a serious error in the code.",
          "defaultLevel": "note",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-4487",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay",
              "Unnecessary"
            ]
          }
        },
        "S927": {
          "id": "S927",
          "shortDescription": "Parameter names should match base declaration and other partial definitions",
          "fullDescription": "The name of a parameter in an externally visible. This rule raises an issue when method override does not match the name of the parameter in the base declaration of the method, or the name of the parameter in the interface declaration of the method or the name of any other partial definition.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-927",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}